function Test-SdnCertificateRotationConfig {
    <#
    .SYNOPSIS
        Validate the Cert Rotation Config provided is correct. Ensure certificates specified present on the machine.
    .PARAMETER NcNodeList
        The NcNodeList that retrieved via Get-SdnNetworkControllerInfoOffline.
    .PARAMETER Credential
        Specifies a user account that has permission to perform this action. The default is the current user.
    .PARAMETER CertRotateConfig
        The Config generated by New-SdnCertificateRotationConfig to include NC REST certificate thumbprint and node certificate thumbprint.
    #>

    param (
        [Parameter(Mandatory = $true)]
        [PSCustomObject[]]$NcNodeList,

        [Parameter(Mandatory = $true)]
        [CertRotateConfig]$CertRotateConfig,

        [Parameter(Mandatory = $false)]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]
        $Credential = [System.Management.Automation.PSCredential]::Empty
    )

    $sb1 = {
        param([Parameter(Position = 0)][String]$param1, [Parameter(Position = 1)][String]$param2)
        $nodeCertObj = Get-SdnCertificate -Path $param1 -Thumbprint $param2

        # ensure that certificate is present
        if ($null -eq $nodeCertObj) {
            return $false
        }

        # ensure that certificate is not expired
        if ($nodeCertObj.NotAfter -le (Get-Date)) {
            return $false
        }

        return $true
    }

    # validate that the certificates are installed on the nodes
    $CertRotateConfig.NodeCerts | ForEach-Object {
        if (Test-ComputerNameIsLocal -ComputerName $_.IpAddressOrFQDN) {
            $certValid = Invoke-Command -ScriptBlock $sb1 -ArgumentList @("Cert:\LocalMachine\My", $_.Thumbprint)
        }
        else {
            $certValid = Invoke-PSRemoteCommand -ComputerName $_.IpAddressOrFQDN -Credential $Credential -ScriptBlock $sb1 -ArgumentList @("Cert:\LocalMachine\My", $_.Thumbprint)
        }

        if (!$certValid) {
            throw "$($_.NodeName) does not have valid certificate with thumbprint $($_.Thumbprint) installed"
        }
    }

    # validate the rest certificate exists on each of the nodes
    if ($CertRotateConfig.RestCertificate) {
        $NcNodeList | ForEach-Object {
            if (Test-ComputerNameIsLocal -ComputerName $_.IpAddressOrFQDN) {
                $certValid = Invoke-Command -ScriptBlock $sb1 -ArgumentList @("Cert:\LocalMachine\My", $CertRotateConfig.RestCertificate.Thumbprint)
            }
            else {
                $certValid = Invoke-PSRemoteCommand -ComputerName $_.IpAddressOrFQDN -Credential $Credential -ScriptBlock $sb1 -ArgumentList @("Cert:\LocalMachine\My", $CertRotateConfig.RestCertificate.Thumbprint)
            }

            if (!$certValid) {
                throw "$($_.NodeName) does not have valid rest certificate with thumbprint $($CertRotateConfig.RestCertificate.Thumbprint) installed"
            }
        }
    }

    return $true
}
