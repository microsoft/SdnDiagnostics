trigger:
  branches:
    include:
    - main
  paths:
    include:
      - src/**

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 1
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: none
  WindowsContainerImage: $(image) # Docker image which is used to build the project

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: $(template)
  parameters:
    cloudvault:
      enabled: false
    globalSdl:
      tsa:
        enabled: false
      binskim:
        break: true
      policheck:
        break: true

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows

        variables:
          ob_outputDirectory: '$(REPOROOT)\out'
          ob_sdl_binskim_break: true
          ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
            ob_symbolsPublishing_enabled: true
          ob_artifactBaseName: 'drop'

        steps:
          - task: PowerShell@2
            displayName: "Create custom version"
            inputs:
              filepath: '$(Build.SourcesDirectory)\.build\generate-version.ps1'
          - task: onebranch.pipeline.version@1
            displayName: 'Setup BuildNumber'
            system: 'Custom'
            customVersion: '$(CUSTOM_VERSION)'
          - task: PowerShell@2
            displayName: 'Restore external dependencies'
            inputs:
              filePath: '$(Build.SourcesDirectory)\.build\restore.ps1'
              workingDirectory: '$(Build.SourcesDirectory)'
          - task: PowerShell@2
            displayName: 'Generate SdnDiagnostics module files'
            inputs:
              filePath: '$(Build.SourcesDirectory)\.build\generate-sdndiagnostics.ps1'
          - task: PowerShell@2
            displayName: 'Generate module manifest for SdnDiagnostics'
            inputs:
              filePath: '$(Build.SourcesDirectory)\.build\generate-module-manifest.ps1'
              arguments: -Manifest $(Build.SourcesDirectory)\out\build\SdnDiagnostics\SdnDiagnostics.psd1 -Version $(CUSTOM_VERSION)
          - task: PowerShell@2'
          - task: onebranch.pipeline.signing@1
            displayName: 'Script Signing'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              signing_profile: 'external_distribution'
              files_to_sign: '**/*.exe;**/*.dll;**/*.ps1;**/*.psm1;**/*.psd1;**/*.js'
              search_root: '$(Build.SourcesDirectory)\out'
